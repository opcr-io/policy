name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - release-*
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for PRs
  pull_request:
    branches:
      - main
      - release-*
env:
  VAULT_ADDR: https://vault.eng.aserto.com/
  PRE_RELEASE: ${{ github.ref == 'refs/heads/main' && 'development' || '' }}
  GO_VERSION: "1.16"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Read Configuration
        uses: hashicorp/vault-action@v2.1.0
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "SSH_PRIVATE_KEY"     | SSH_PRIVATE_KEY;
      - name: Install Vault CLI
        uses: innovationnorway/setup-vault@v1.0.3
        with:
          version: 1.4.2
      - name: Renew Vault Token
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          vault token renew
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup caching
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Lint and test
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          mkdir -p $HOME/.ssh
          umask 0077 && echo -e "${SSH_PRIVATE_KEY}" > $HOME/.ssh/id_rsa
          ssh-keyscan github.com >> $HOME/.ssh/known_hosts

          git config --global url."git@github.com:".insteadOf https://github.com/
          git config --global user.email "github-bot@aserto.com"
          git config --global user.name "Aserto Bot"

          go run mage.go deps lint test
      - name: Upload code coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: cover.out

  push:
    needs: test
    runs-on: ubuntu-latest
    # when on a branch only push if the branch is main
    # always push when ref is a tag
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') )
    steps:
      - name: Read Configuration
        uses: hashicorp/vault-action@v2.1.0
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "SSH_PRIVATE_KEY"     | SSH_PRIVATE_KEY;
            kv/data/github  "USERNAME"            | DOCKER_USERNAME;
            kv/data/github  "DOCKER_PUSH_TOKEN"   | DOCKER_PASSWORD;
      - name: Install Vault CLI
        uses: innovationnorway/setup-vault@v1.0.3
        with:
          version: 1.4.2
      - name: Renew Vault Token
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          vault token renew
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup caching
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: https://ghcr.io
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Build and push image
        run: |
          mkdir -p $HOME/.ssh
          umask 0077 && echo -e "${SSH_PRIVATE_KEY}" > $HOME/.ssh/id_rsa
          ssh-keyscan github.com >> $HOME/.ssh/known_hosts

          git config --global url."git@github.com:".insteadOf https://github.com/
          git config --global user.email "github-bot@aserto.com"
          git config --global user.name "Aserto Bot"

          eval `ssh-agent`
          ssh-add $HOME/.ssh/id_rsa

          go run mage.go deps dockerImage
          go run mage.go dockerPush ghcr.io "opcr-io"

  release:
    needs: push
    runs-on: ubuntu-latest
    # Only release when ref is a tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup caching
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Read Configuration
        uses: hashicorp/vault-action@v2.1.0
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "ROOT_TOKEN"        | ROOT_TOKEN;
            kv/data/github  "HOMEBREW_TAP"      | HOMEBREW_TAP;
            kv/data/github  "SSH_PRIVATE_KEY"   | SSH_PRIVATE_KEY;
      - name: Install Vault CLI
        uses: innovationnorway/setup-vault@v1.0.3
        with:
          version: 1.4.2
      - name: Renew Vault Token
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          vault token renew
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.vault.outputs.ROOT_TOKEN }}
          HOMEBREW_TAP: ${{ steps.vault.outputs.HOMEBREW_TAP }}
        run: |
          mkdir -p $HOME/.ssh
          umask 0077 && echo -e "${SSH_PRIVATE_KEY}" > $HOME/.ssh/id_rsa
          ssh-keyscan github.com >> $HOME/.ssh/known_hosts

          git config --global url."git@github.com:".insteadOf https://github.com/
          git config --global user.email "github-bot@aserto.com"
          git config --global user.name "Aserto Bot"

          go run mage.go deps release

  msi:
    needs: release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Read Configuration
        uses: hashicorp/vault-action@v2.1.0
        id: vault
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/data/github  "ROOT_TOKEN"        | ROOT_TOKEN;
      - name: Install Vault CLI
        uses: innovationnorway/setup-vault@v1.0.3
        with:
          version: 1.4.2
      - name: Renew Vault Token
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          vault token renew
      - name: Download exe
        id: download_exe
        shell: bash
        run: |
          hub release download "${GITHUB_REF#refs/tags/}" -i '*windows_x86_64*.zip'
          printf "::set-output name=zip::%s\n" *.zip
          unzip -o *.zip && rm -v *.zip
        env:
          GITHUB_TOKEN: ${{ steps.vault.outputs.ROOT_TOKEN }}
      - name: Install go-msi
        run: choco install -y "go-msi"
      - name: Prepare PATH
        shell: bash
        run: |
          echo "$WIX\\bin" >> $GITHUB_PATH
          echo "C:\\Program Files\\go-msi" >> $GITHUB_PATH
      - name: Build MSI
        id: buildmsi
        shell: bash
        env:
          ZIP_FILE: ${{ steps.download_exe.outputs.zip }}
        run: |
          mkdir -p build
          msi="$(basename "$ZIP_FILE" ".zip").msi"
          printf "::set-output name=msi::%s\n" "$msi"
          go-msi make --msi "$PWD/$msi" --out "$PWD/build" --version "${GITHUB_REF#refs/tags/}"
      - name: Upload MSI
        shell: bash
        run: |
          tag_name="${GITHUB_REF#refs/tags/}"
          hub release edit "$tag_name" -m "" -a "$MSI_FILE"
          release_url="$(gh api repos/:owner/:repo/releases -q ".[]|select(.tag_name==\"${tag_name}\")|.url")"
          publish_args=( -F draft=false )
          gh api -X PATCH "$release_url" "${publish_args[@]}"
        env:
          MSI_FILE: ${{ steps.buildmsi.outputs.msi }}
          GITHUB_TOKEN: ${{ steps.vault.outputs.ROOT_TOKEN }}
